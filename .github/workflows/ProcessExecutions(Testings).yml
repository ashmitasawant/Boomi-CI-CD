name: Testing Pipeline

# Controls when the workflow will run
on:
  push:
    paths:
     - 'DeploymentConfiguration/SubmissionPayload.json'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 getProcessInfo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    outputs:
      processNames: ${{steps.setProcessLevelInfo.outputs.processNames}}
      
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Process Info
        uses: actions/checkout@v2
      - id: setProcessLevelInfo
        run: |
            ProcessDetails=$(cat ./DeploymentConfiguration/ProcessDetails.HX_Demo.dev.json)
                      
            processName=$(echo ${ProcessDetails} | jq '.[] | .processDetails[].processName')
                       
            ProcessNamesArray=$(echo $processName)
            echo $ProcessNamesArray
            echo "::set-output name=processNames::($ProcessNamesArray)"
            
            
 processExecution:
   environment: Dev
   env: 
      API_AUTHORIZATION: ${{ secrets.API_AUTHORIZATION }}
   runs-on: ubuntu-latest
   needs: getProcessInfo
   steps:
      - uses: actions/checkout@v2
      - name: Process Executions
        id: processExecutions
        run: |
             SubmissionPayload=$(cat ./DeploymentConfiguration/SubmissionPayload.json)
             echo $SubmissionPayload
             BindPayload=$(cat ./DeploymentConfiguration/BindPayload.json)
             echo $BindPayload
        
             processes=${{needs.getProcessInfo.outputs.processNames}}
             echo $processes
             if [[ ${processes[*]} =~ (^|[[:space:]])TestWS($|[[:space:]]) ]]; 
             then
                  CODE=`curl --write-out '%{http_code}' \
                        --request POST \
                        --header 'authorization: ${{env.API_AUTHORIZATION}}' \
                        --header 'content-type: application/json' \
                        --url 'https://c01-sg.integrate.boomi.com/ws/rest/personDetails/v1/personDetails/' \
                        --data '"$SubmissionPayload"'`
                        if [[ $CODE == *"200"* ]]
                        then
                           echo "The process executed successfully"
                        else 
                           echo $CODE
                        fi
             fi
             if [[ ${processes[*]} =~ (^|[[:space:]])TestForWS($|[[:space:]]) ]]; 
             then
                  CODE=`curl --write-out '%{http_code}' \
                        --request POST \
                        --header 'authorization: ${{env.API_AUTHORIZATION}}' \
                        --header 'content-type: application/json' \
                        --url 'https://c01-sg.integrate.boomi.com/ws/rest/employeeDetails/v1/employeeDetails/' \
                        --data '"$BindPayload"'`
                        if [[ $CODE == *"200"* ]]
                        then
                           echo "The process executed successfully"
                        else 
                           echo $CODE
                        fi
             fi
