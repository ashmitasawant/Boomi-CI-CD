name: Deployment Pipeline

on:
  push:
    paths:
     - 'DeploymentConfiguration/*'
  workflow_dispatch:

jobs:
  getEnvironmentInfo:
   runs-on: ubuntu-latest
   outputs:
     devEnvironmentId: ${{steps.setEnvironmentLevelInfo.outputs.devEnvironmentId}}
     devAtomId: ${{steps.setEnvironmentLevelInfo.outputs.devAtomId}}
     testEnvironmentId: ${{steps.setEnvironmentLevelInfo.outputs.testEnvironmentId}}
     testAtomId: ${{steps.setEnvironmentLevelInfo.outputs.testAtomId}}
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get Process Info
        uses: actions/checkout@v2
      - id: setEnvironmentLevelInfo
        run: |
            DevEnvironmentDetails=$(cat ./EnvironmentConfiguration/Dev.Env.Config.json)
            devEnvironmentID=$(echo  ${DevEnvironmentDetails} | jq '.[] | .environmentId')
            echo $devEnvironmentID
            echo "::set-output name=devEnvironmentId::$devEnvironmentID"
            
            devAtomID=$(echo ${DevEnvironmentDetails} | jq '.[] | .atomId')
            echo $devAtomID
            echo "::set-output name=devAtomId::$devAtomID"
            
            TestEnvironmentDetails=$(cat ./EnvironmentConfiguration/Test.Env.Config.json)
            testEnvironmentID=$(echo  ${TestEnvironmentDetails} | jq '.[] | .environmentId')
            echo $testEnvironmentID
            echo "::set-output name=testEnvironmentId::$testEnvironmentID"
            
            testAtomID=$(echo ${TestEnvironmentDetails} | jq '.[] | .atomId')
            echo $testAtomID
            echo "::set-output name=testAtomId::$testAtomID"
  
  deployments:
    outputs:
      componentIds: ${{ steps.setProcessLevelInfo.outputs.componentIds }}
      packageVersions: ${{ steps.setProcessLevelInfo.outputs.packageVersions }}
      processNames: ${{steps.setProcessLevelInfo.outputs.processNames}}
      environmentName: ${{steps.setProcessLevelInfo.outputs.environmentName}}
      modes: ${{steps.setProcessLevelInfo.outputs.modes}}
      deploymentIds: ${{steps.setProcessLevelInfo.outputs.deploymentIds}}
    environment: Dev
    env: 
      BOOMI_AUTHORIZATION: ${{ secrets.BOOMI_AUTHORIZATION }}
    runs-on: ubuntu-latest
    steps:
      - name: Package Creation and Deployment 
        uses: actions/checkout@v2
      - id: setProcessLevelInfo
        run: |
            ProcessDetails=$(cat ./DeploymentConfiguration/ProcessDetails.HX_Demo.dev.json)
            echo $ProcessDetails
            listFiles=$(ls DeploymentConfiguration/)
            echo $listFiles
            
            for i in $listFiles
            do
              readFiles=$(cat ./DeploymentConfiguration/$i)
              echo $readFiles
              
              environmentName=$(echo ${readFiles} | jq '.[] | .environmentName')
              processName=$(echo ${readFiles} | jq '.[] | .processDetails[].processName')
              componentID=$(echo ${readFiles} | jq '.[] | .processDetails[].componentID')
              packageVersion=$(echo ${readFiles} | jq '.[] | .processDetails[].packageVersion')
              mode=$(echo ${readFiles} | jq '.[] | .processDetails[].mode')
              deploymentID=$(echo ${readFiles} | jq '.[] | .processDetails[].deploymentID')
              
              ComponentsArray=$(echo $componentID)
              c=$(echo ($ComponentsArray))
              echo $c
              echo "::set-output name=componentIds::($ComponentsArray)"

              ProcessNamesArray=$(echo $processName)
              echo $ProcessNamesArray
              echo "::set-output name=processNames::($ProcessNamesArray)"

              PackageVersionArray=$(echo $packageVersion)
              echo $PackageVersionArray
              echo "::set-output name=packageVersions::($PackageVersionArray)"

              ModeArray=$(echo $mode)
              echo $ModeArray
              echo "::set-output name=modes::($ModeArray)"

              DeploymentsArray=$(echo $deploymentID)
              echo $DeploymentsArray
              echo "::set-output name=deploymentIds::($DeploymentsArray)"
            done
              
             
               
              
               
